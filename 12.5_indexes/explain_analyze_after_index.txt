-> Table scan on <temporary>  (actual time=58.745..58.786 rows=391 loops=1)
    -> Aggregate using temporary table  (actual time=58.744..58.744 rows=391 loops=1)
        -> Nested loop inner join  (cost=18972.30 rows=16286) (actual time=0.645..57.950 rows=642 loops=1)
            -> Nested loop inner join  (cost=13272.25 rows=16011) (actual time=0.589..33.974 rows=16044 loops=1)
                -> Nested loop inner join  (cost=7668.22 rows=16011) (actual time=0.585..21.482 rows=16044 loops=1)
                    -> Nested loop inner join  (cost=2064.20 rows=4581) (actual time=0.569..3.241 rows=4581 loops=1)
                        -> Covering index scan on inventory using idx_fk_film_id  (cost=460.85 rows=4581) (actual time=0.559..1.641 rows=4581 loops=1)
                        -> Single-row covering index lookup on film using PRIMARY (film_id=inventory.film_id)  (cost=0.25 rows=1) (actual time=0.000..0.000 rows=1 loops=4581)
                    -> Index lookup on rental using idx_fk_inventory_id (inventory_id=inventory.inventory_id)  (cost=0.87 rows=3) (actual time=0.003..0.004 rows=4 loops=4581)
                -> Single-row index lookup on customer using PRIMARY (customer_id=rental.customer_id)  (cost=0.25 rows=1) (actual time=0.001..0.001 rows=1 loops=16044)
            -> Index lookup on payment using index_payment_date (payment_date=rental.rental_date), with index condition: (cast(payment.payment_date as date) = '2005-07-30')  (cost=0.25 rows=1) (actual time=0.001..0.001 rows=0 loops=16044)
